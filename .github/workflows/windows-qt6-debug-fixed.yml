---
name: 🪟 Windows Qt6 Debug Build (Fixed)
on:
  workflow_dispatch:  # Allow manual triggering

permissions:
  packages: write

jobs:
  build:
    name: build (windows debug)
    runs-on: windows-2022

    steps:
      - name: 🐣 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: 🔍 List installed tools
        shell: pwsh
        run: |
          Write-Host "Checking environment..."
          Get-Command cmake -ErrorAction SilentlyContinue
          Get-Command ninja -ErrorAction SilentlyContinue
          Get-Command cl -ErrorAction SilentlyContinue
      
      - name: 🔨 Install build tools
        shell: pwsh
        run: |
          choco install ninja cmake -y
          # Verify installation
          refreshenv
          ninja --version
          cmake --version

      - name: 🧽 Developer Command Prompt for Microsoft Visual C++
        uses: ilammy/msvc-dev-cmd@v1

      - name: 🎡 Setup vcpkg
        uses: ./.github/actions/setup-vcpkg

      - name: 🦬 Setup flex/bison
        uses: robinraju/release-downloader@v1.12
        with:
          repository: 'lexxmark/winflexbison'
          fileName: '*.zip'
          tag: 'v2.5.24'
          extract: true

      - name: 📝 Create Debug Triplet
        shell: bash
        run: |
          # Create debug triplet file
          mkdir -p vcpkg/triplets
          cat > vcpkg/triplets/x64-windows.cmake << EOF
          set(VCPKG_TARGET_ARCHITECTURE x64)
          set(VCPKG_CRT_LINKAGE dynamic)
          set(VCPKG_LIBRARY_LINKAGE dynamic)
          set(VCPKG_BUILD_TYPE debug)
          EOF
          cat vcpkg/triplets/x64-windows.cmake

      - name: 🌱 Install dependencies and generate project files
        shell: bash
        run: |
          BUILD_DIR=$( cygpath "${{ github.workspace }}/build" )
          SOURCE_DIR=$( cygpath "${{ github.workspace }}" )
          
          # Disable NuGet binary caching to avoid permission issues
          export VCPKG_FEATURE_FLAGS="-binarycaching"
          # Set vcpkg environment variables to help with dependency builds
          export VCPKG_MAX_CONCURRENCY=1
          
          # Make sure Ninja is in PATH
          export PATH="/c/ProgramData/chocolatey/bin:$PATH"
          ninja --version
          
          cmake -S "${SOURCE_DIR}" \
                -B "${BUILD_DIR}" \
                -G Ninja \
                -D CMAKE_BUILD_TYPE=Debug \
                -D WITH_VCPKG=ON \
                -D CREATE_ZIP=ON \
                -D VCPKG_TARGET_TRIPLET=x64-windows \
                -D VCPKG_HOST_TRIPLET=x64-windows \
                -D WITH_DESKTOP=ON \
                -D WITH_3D=ON \
                -D WITH_BINDINGS=ON \
                -D ENABLE_TESTS=OFF \
                -D BUILD_WITH_QT6=ON \
                -D ENABLE_UNITY_BUILDS=OFF \
                -D FLEX_EXECUTABLE="${SOURCE_DIR}/win_flex.exe" \
                -D BISON_EXECUTABLE="${SOURCE_DIR}/win_bison.exe" \
                -D WITH_QTWEBKIT=OFF \
                -D CMAKE_MAKE_PROGRAM=$(which ninja)

      - name: 🌋 Build
        shell: bash
        run: |
          cmake --build "${{ github.workspace }}/build" --config Debug

      - name: 📦 Package
        shell: bash
        run: |
          cmake --build "${{ github.workspace }}/build" --target bundle --config Debug

      - name: 📦 Create Debug SDK
        run: |
          # Use explicit path to vcpkg executable
          ./vcpkg/vcpkg.exe export --zip --output-dir=./sdk --x-install-root=./build/vcpkg_installed --x-manifest-root=vcpkg

      - name: 📤 Upload debug SDK
        uses: actions/upload-artifact@v4
        with:
          name: qgis-sdk-x64-windows-debug
          path: |
            sdk/vcpkg-export-*.zip

      - name: 📑 Upload build logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-logs-x64-windows-debug
          path: |
            build/CMakeFiles/CMakeOutput.log
            build/CMakeFiles/CMakeError.log
            build/vcpkg-manifest-install.log

      - name: 📤 Upload debug bundle
        uses: actions/upload-artifact@v4
        id: artifact-win64-qt6-debug
        with:
          name: qgis-windows-qt6-debug
          path: |
            build/*-win64.zip
