---
name: 🪟 Windows Qt6 Debug Build
on:
  workflow_dispatch:  # Allow manual triggering

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  packages: write

jobs:
  build:
    name: build (windows debug)
    runs-on: windows-2022

    steps:
      - name: 🐣 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: 🔨 Uninstall system cmake
        shell: bash
        run: |
          choco uninstall cmake.install

      - name: 🐩 Install CMake and Ninja
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: 3.31.6

      - name: 🧽 Developer Command Prompt for Microsoft Visual C++
        uses: ilammy/msvc-dev-cmd@v1

      - name: 🎡 Setup vcpkg
        uses: ./.github/actions/setup-vcpkg

      - name: 🦬 Setup flex/bison
        uses: robinraju/release-downloader@v1.12
        with:
          repository: 'lexxmark/winflexbison'
          fileName: '*.zip'
          tag: 'v2.5.24'
          extract: true

      - name: 🛍️ Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 1G
          key: build-ccache-win64-qt6-debug-${{ github.event.pull_request.base.ref || github.ref_name }}
          save: ${{ github.event_name == 'push' }}

      - name: 🛍️ Tune ccache configuration
        shell: bash
        run: |
          # To make ccache work properly with precompiled headers
          ccache --set-config sloppiness=pch_defines,time_macros,include_file_mtime,include_file_ctime

      - name: 📝 Create Debug Triplet
        shell: bash
        run: |
          # Create debug triplet file
          cat > vcpkg/triplets/x64-windows.cmake << EOF
          set(VCPKG_TARGET_ARCHITECTURE x64)
          set(VCPKG_CRT_LINKAGE dynamic)
          set(VCPKG_LIBRARY_LINKAGE dynamic)
          set(VCPKG_BUILD_TYPE debug)
          EOF
          cat vcpkg/triplets/x64-windows.cmake

      - name: 🌱 Install dependencies and generate project files
        shell: bash
        run: |
          BUILD_DIR=$( cygpath "${{ github.workspace }}/build" )
          SOURCE_DIR=$( cygpath "${{ github.workspace }}" )

          # Set vcpkg environment variables to help with dependency builds
          export VCPKG_MAX_CONCURRENCY=1
          
          cmake -S "${SOURCE_DIR}" \
                -B "${BUILD_DIR}" \
                -G Ninja \
                -D CMAKE_BUILD_TYPE=Debug \
                -D WITH_VCPKG=ON \
                -D CREATE_ZIP=ON \
                -D VCPKG_TARGET_TRIPLET=x64-windows \
                -D VCPKG_HOST_TRIPLET=x64-windows \
                -D WITH_DESKTOP=ON \
                -D WITH_3D=ON \
                -D WITH_BINDINGS=ON \
                -D ENABLE_TESTS=OFF \
                -D BUILD_WITH_QT6=ON \
                -D USE_CCACHE=ON \
                -D ENABLE_UNITY_BUILDS=OFF \
                -D FLEX_EXECUTABLE="${SOURCE_DIR}/win_flex.exe" \
                -D BISON_EXECUTABLE="${SOURCE_DIR}/win_bison.exe" \
                -D SIP_BUILD_EXECUTABLE="${BUILD_DIR}\vcpkg_installed\x64-windows\tools\python3\Scripts\sip-build.exe" \
                -D CMAKE_C_COMPILER_LAUNCHER=ccache \
                -D CMAKE_CXX_COMPILER_LAUNCHER=ccache \
                -D WITH_QTWEBKIT=OFF \
                -D VCPKG_INSTALL_OPTIONS="--x-buildtrees-root=C:/src" \
                -D NUGET_USERNAME=${{ github.actor }} \
                -D NUGET_TOKEN=${{ secrets.GITHUB_TOKEN }}

      - name: 🌋 Build
        shell: bash
        run: |
          cmake --build "${{ github.workspace }}/build" --config Debug

      - name: 📦 Package
        shell: bash
        run: |
          cmake --build "${{ github.workspace }}/build" --target bundle --config Debug

      - name: 📦 Create Debug SDK
        run: |
          vcpkg.exe export --zip --output-dir=./sdk --x-install-root=./build/vcpkg_installed --x-manifest-root=vcpkg

      - name: 📤 Upload debug sdk
        uses: actions/upload-artifact@v4
        with:
          name: qgis-sdk-x64-windows-debug
          path: |
            sdk/vcpkg-export-*.zip

      - name: 📑 Upload dep build logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: build-logs-x64-windows-debug
          path: |
            C:/src/**/*.log

      - name: 📤 Upload debug bundle
        uses: actions/upload-artifact@v4
        id: artifact-win64-qt6-debug
        with:
          name: qgis-windows-qt6-debug
          path: |
            build/*-win64.zip
